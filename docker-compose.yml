
networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  db_data:
  grafana_data:

services:
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    ports:
      - 3001:3000
    env_file: .env
    volumes:
      - ./config:/app/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    networks:
      - monitoring

  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./BE:/app
    env_file:
      - BE/.env
    depends_on:
      - database
    networks:
      - monitoring

  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./FE:/app
    env_file:
      - FE/.env
    depends_on:
      - backend
    networks:
      - monitoring

  database:
    image: postgres:16.4
    env_file:
      - .db.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring
  
  glances:
    image: nicolargo/glances:latest
    container_name: glances
    restart: always
    ports:
      - "61208:61208"  
    environment:
      - GLANCES_OPT=-w  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  
    networks:
      - monitoring